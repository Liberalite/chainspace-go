// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types.proto

package checker

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import transactor "chainspace.io/prototype/transactor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Opcode int32

const (
	Opcode_UNKNOWN Opcode = 0
	Opcode_CHECK   Opcode = 1
)

var Opcode_name = map[int32]string{
	0: "UNKNOWN",
	1: "CHECK",
}
var Opcode_value = map[string]int32{
	"UNKNOWN": 0,
	"CHECK":   1,
}

func (x Opcode) String() string {
	return proto.EnumName(Opcode_name, int32(x))
}
func (Opcode) EnumDescriptor() ([]byte, []int) { return fileDescriptorTypes, []int{0} }

type CheckRequest struct {
	Tx *transactor.Transaction `protobuf:"bytes,1,opt,name=tx" json:"tx,omitempty"`
}

func (m *CheckRequest) Reset()                    { *m = CheckRequest{} }
func (m *CheckRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()               {}
func (*CheckRequest) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{0} }

func (m *CheckRequest) GetTx() *transactor.Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

type CheckResponse struct {
	Ok        bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *CheckResponse) Reset()                    { *m = CheckResponse{} }
func (m *CheckResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckResponse) ProtoMessage()               {}
func (*CheckResponse) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{1} }

func (m *CheckResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *CheckResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*CheckRequest)(nil), "checker.CheckRequest")
	proto.RegisterType((*CheckResponse)(nil), "checker.CheckResponse")
	proto.RegisterEnum("checker.Opcode", Opcode_name, Opcode_value)
}

func init() { proto.RegisterFile("checker/types.proto", fileDescriptorTypes) }

var fileDescriptorTypes = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8e, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xcd, 0x82, 0xad, 0x9d, 0x56, 0x29, 0xeb, 0xc1, 0x52, 0x3c, 0x84, 0x5e, 0x2c, 0x82,
	0x1b, 0xd0, 0x83, 0x27, 0x4f, 0x41, 0x10, 0x0a, 0x29, 0x04, 0xc5, 0xf3, 0x66, 0x1d, 0x93, 0x25,
	0xb8, 0xb3, 0x66, 0x27, 0x50, 0xff, 0xbd, 0x74, 0x0d, 0x04, 0x6f, 0xef, 0xbd, 0x99, 0x6f, 0xde,
	0xc0, 0xa5, 0x69, 0xd0, 0xb4, 0xd8, 0x65, 0xfc, 0xe3, 0x31, 0x28, 0xdf, 0x11, 0x93, 0x9c, 0x0e,
	0xe1, 0xfa, 0xae, 0xb6, 0xdc, 0xf4, 0x95, 0x32, 0xf4, 0x95, 0xd5, 0x54, 0x53, 0x16, 0xe7, 0x55,
	0xff, 0x19, 0x5d, 0x34, 0x51, 0xfd, 0x71, 0x6b, 0x65, 0x1a, 0x6d, 0x5d, 0xf0, 0xda, 0xa0, 0xb2,
	0xc3, 0xf2, 0xf1, 0x6e, 0xc6, 0x9d, 0x76, 0x41, 0x1b, 0xa6, 0x7f, 0x3d, 0x9b, 0x47, 0x58, 0xe4,
	0xc7, 0xa6, 0x12, 0xbf, 0x7b, 0x0c, 0x2c, 0x6f, 0x40, 0xf0, 0x61, 0x95, 0xa4, 0xc9, 0x76, 0x7e,
	0x7f, 0xa5, 0x46, 0x48, 0xbd, 0x0e, 0xd2, 0x92, 0x2b, 0x05, 0x1f, 0x36, 0x4f, 0x70, 0x3e, 0x80,
	0xc1, 0x93, 0x0b, 0x28, 0x2f, 0x40, 0x50, 0x1b, 0xc9, 0xb3, 0x52, 0x50, 0x2b, 0xaf, 0x61, 0x16,
	0x6c, 0xed, 0x34, 0xf7, 0x1d, 0xae, 0x44, 0x9a, 0x6c, 0x17, 0xe5, 0x18, 0xdc, 0xa6, 0x30, 0xd9,
	0x7b, 0x43, 0x1f, 0x28, 0xe7, 0x30, 0x7d, 0x2b, 0x76, 0xc5, 0xfe, 0xbd, 0x58, 0x9e, 0xc8, 0x19,
	0x9c, 0xe6, 0x2f, 0xcf, 0xf9, 0x6e, 0x99, 0x54, 0x93, 0xf8, 0xe0, 0xc3, 0x6f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x52, 0xbc, 0xb1, 0x6b, 0x1f, 0x01, 0x00, 0x00,
}
