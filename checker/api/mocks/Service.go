// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import api "chainspace.io/chainspace-go/sbac/api"

import context "context"
import mock "github.com/stretchr/testify/mock"

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// Check provides a mock function with given fields: ctx, tx
func (_m *Service) Check(ctx context.Context, tx *api.Transaction) (interface{}, int, error) {
	ret := _m.Called(ctx, tx)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(context.Context, *api.Transaction) interface{}); ok {
		r0 = rf(ctx, tx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 int
	if rf, ok := ret.Get(1).(func(context.Context, *api.Transaction) int); ok {
		r1 = rf(ctx, tx)
	} else {
		r1 = ret.Get(1).(int)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, *api.Transaction) error); ok {
		r2 = rf(ctx, tx)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
