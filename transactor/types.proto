syntax = "proto3";
package transactor;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

enum Opcode {
  UNKNOWN = 0;
  CHECK_TRANSACTION = 1;
  ADD_TRANSACTION = 2;
  QUERY_OBJECT = 3;
  CREATE_OBJECT = 4;
  DELETE_OBJECT = 5;
  SBAC = 6;
}

enum ObjectStatus {
  ACTIVE = 0;
  INACTIVE = 1;
  LOCKED = 2;
}

message Transaction {
  repeated Trace traces = 1;
}

message Trace {
  string contractID = 1 [(gogoproto.customname) = "ContractID"];;
  string procedure = 2;
  repeated bytes inputObjectsKeys = 3;
  repeated bytes inputReferencesKeys = 4;
  repeated bytes outputObjects = 5;
  repeated bytes parameters = 6;
  repeated bytes returns = 7;
  repeated Trace dependencies = 8;
}

message Object {
  bytes value = 1;
  bytes key = 2;
  ObjectStatus status = 3;
}

message CheckTransactionRequest {
  Transaction tx = 1;
}

message CheckTransactionResponse {
  bool ok = 1;
  bytes signature = 2;
}

message AddTransactionRequest {
  Transaction tx = 1;
  map<uint64, bytes> evidences = 2;

}

message ObjectTraceIDPair {
  bytes traceID = 1 [(gogoproto.customname) = "TraceID"];
  repeated Object objects = 2;
}

message ObjectList {
  repeated Object list = 1;
}

message AddTransactionResponse {
  map<string, ObjectList> objects = 1;
}

message QueryObjectRequest {
  bytes objectKey = 1;
}

message QueryObjectResponse {
  Object object = 1;
}

message DeleteObjectRequest {
  bytes objectKey = 1;
}

message DeleteObjectResponse {
  Object object = 1;
}

message NewObjectRequest {
  bytes object = 1;
}

message NewObjectResponse {
  bytes id = 1 [(gogoproto.customname) = "ID"];
}

// SBAC

enum SBACOpcode {
  CONSENSUS1 = 0; // consensus 1 - new transaction
  CONSENSUS2 = 1; // consensus 2
  PHASE1 = 2; // 2-phase commit phase 1 - accept transaction
  PHASE2 = 3; // 2-phase commit phase 2 - commit transaction
  COMMIT = 4; // create objects in other shards
  CONSENSUS_COMMIT = 5;
}

enum SBACDecision {
  ACCEPT = 0;
  REJECT = 1;
}

message SBACMessage {
  SBACOpcode op = 1;
  SBACDecision decision = 2;
  SBACTransaction tx = 3;
  uint64 peerId = 4 [(gogoproto.customname) = "PeerID"];
}

message SBACMessageAck {
  uint64 lastId = 1 [(gogoproto.customname) = "LastID"];
}

message SBACTransaction {
  bytes id = 1 [(gogoproto.customname) = "ID"];
  Transaction tx = 2;
  map<uint64, bytes> evidences = 3;
  SBACOpcode op = 4;
  bytes signature = 5;
}
