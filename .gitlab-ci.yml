image: golang:1.11.0

variables:
  BIN_NAME: chainspace
  ARTIFACTS_DIR: artifacts
  GO_PROJECT: chainspace
  ARTIFACTS_BIN: ${CI_PROJECT_DIR}/${ARTIFACTS_DIR}/cmd/${GO_PROJECT}/${BIN_NAME}

cache:
  paths:
    - /apt-cache
    - /go/src/github.com
    - /go/src/golang.org
    - /go/src/google.golang.org
    - /go/src/gopkg.in

stages:
  - test
  - build
  - deploy

before_script:
  - echo $GOPATH
  - mkdir -p /tmp/src/${GO_PROJECT} /go/src/_/builds
  - mkdir -p ${CI_PROJECT_DIR}/${ARTIFACTS_DIR}
  - cp -r ${CI_PROJECT_DIR}/* /tmp/src/${GO_PROJECT}/
  - ln -s /tmp/src/${GO_PROJECT} /go/src/_/builds/${GO_PROJECT}
  - cd /tmp/src/${GO_PROJECT}
  - export ARTIFACTS_BIN=${ARTIFACTS_BIN}

unit_tests:
  stage: test
  script:
    - make test

e2e_tests:
  stage: test
  script:
    - apt-get update && apt-get install -y jq bc
    - make install
    - ./ci/blockmaniatest.sh

#race_detector:
#  stage: test
#  script:
#    - make race

# FUTURE:
# Requires custom GCC based docker image
#
# memory_sanitizer:
#  stage: test
#  script:
#    - make msan

code_coverage:
  stage: test
  script:
    - make coverage

code_coverage_report:
  stage: test
  script:
    - make coverhtml
  only:
    - master

#lint_code:
#  stage: test
#  script:
#    - make lint

build_chainspace:
  stage: build
  script:
    - make
  artifacts:
    paths:
      - ${ARTIFACTS_DIR}
    expire_in: 2 weeks
