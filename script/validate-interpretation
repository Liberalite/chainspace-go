#! /usr/bin/env python3

import sys

from collections import namedtuple
from json import loads
from os.path import expanduser, join

if len(sys.argv) != 2:
    print("Usage: validate-interpretation NETWORK_NAME")
    sys.exit(1)

Result = namedtuple('Result', 'round hashes')

net_dir = join(expanduser("~"), ".chainspace", sys.argv[1])
state = {}

for node_id in [1, 4, 7, 10]:
    fpath = join(net_dir, 'node-%d' % node_id, 'interpreted.state')
    results = []
    state[node_id] = results
    with open(fpath, 'rb') as f:
        lines = f.read().split(b'\0\n')
        for line in lines:
            if not line:
                continue
            data = loads(line)
            round = data['Round']
            hashes = tuple(id['Hash'] for id in data['Blocks'])
            results.append(Result(round, hashes))

shortest = None
for node_id in [1, 4, 7, 10]:
    l = len(state[node_id])
    print(">> Node %d has interpreted %d rounds" % (node_id, l))
    if shortest is None:
        shortest = l
    elif l < shortest:
        shortest = l

rounds = []
for node_id in [1, 4, 7, 10]:
    rounds.append(state[node_id][:shortest])

print(">> Comparing %d rounds" % shortest)
for results in zip(*rounds):
    prev = None
    for result in results:
        if prev is None:
            prev = result
        elif result != prev:
            print("!! Mismatched interpretation result for round %d" %
                  result.round)
            break
