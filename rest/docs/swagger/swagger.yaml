definitions:
  api.CheckTransactionResponse:
    properties:
      node_id:
        type: integer
      ok:
        type: boolean
      signature:
        type: string
    type: object
  api.Dependency:
    type: object
  api.Error:
    properties:
      error:
        type: string
    type: object
  api.LabelObject:
    properties:
      label:
        type: string
      object:
        type: object
    type: object
  api.LabelVersionID:
    properties:
      label:
        type: string
      version_id:
        type: string
    type: object
  api.Object:
    properties:
      status:
        type: string
      value:
        type: object
      version_id:
        type: string
    type: object
  api.ObjectIDResponse:
    properties:
      id:
        type: string
    type: object
  api.ObjectListResponse:
    properties:
      pairs:
        items:
          $ref: '#/definitions/api.LabelObject'
        type: array
    type: object
  api.ObjectRequest:
    properties:
      object:
        type: object
    type: object
  api.ObjectResponse:
    properties:
      object:
        type: object
    type: object
  api.Trace:
    properties:
      contract_id:
        type: string
      dependencies:
        items:
          $ref: '#/definitions/api.Dependency'
        type: array
      input_object_version_ids:
        items:
          type: string
        type: array
      input_reference_version_ids:
        items:
          type: string
        type: array
      labels:
        items:
          type: '&{%!s(token.Pos=2188) <nil> string}'
        type: array
      output_objects:
        items:
          type: '&{%!s(token.Pos=2007) %!s(*ast.FieldList=&{2016 [] 2017}) %!s(bool=false)}'
        type: array
      parameters:
        items:
          type: '&{%!s(token.Pos=2071) %!s(*ast.FieldList=&{2080 [] 2081}) %!s(bool=false)}'
        type: array
      procedure:
        type: string
      returns:
        items:
          type: '&{%!s(token.Pos=2131) %!s(*ast.FieldList=&{2140 [] 2141}) %!s(bool=false)}'
        type: array
    type: object
  api.Transaction:
    properties:
      mappings:
        type: object
      signatures:
        type: object
      traces:
        items:
          $ref: '#/definitions/api.Trace'
        type: array
    type: object
  api.VersionIDListResponse:
    properties:
      pairs:
        items:
          $ref: '#/definitions/api.LabelVersionID'
        type: array
    type: object
  api.VersionIDResponse:
    properties:
      version_id:
        type: string
    type: object
info:
  contact: {}
  description: Chainspace REST API endpoints
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Chainspace API
  version: "1.0"
paths:
  /api/checker/check:
    post:
      consumes:
      - application/json
      description: Checks something
      operationId: check
      parameters:
      - description: transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/api.Transaction'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.CheckTransactionResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
            type: object
      summary: Checks something
      tags:
      - checker
  /api/kv/label/{label}:
    get:
      consumes:
      - application/json
      description: get string by label
      operationId: getbyLabel
      parameters:
      - description: label
        in: path
        name: label
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ObjectResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
            type: object
      summary: Retrieve a key by its label
      tags:
      - kv
  /api/kv/label/{label}/version-id:
    get:
      consumes:
      - application/json
      description: get version ID by label
      operationId: getVersionIDbyLabel
      parameters:
      - description: label
        in: path
        name: label
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VersionIDResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
            type: object
      summary: Retrieve a version ID by its label
      tags:
      - kv
  /api/kv/prefix/{prefix}:
    get:
      consumes:
      - application/json
      description: See before
      operationId: getByPrefix
      parameters:
      - description: prefix
        in: path
        name: prefix
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ObjectListResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
            type: object
      summary: See before
      tags:
      - kv
  /api/kv/prefix/{prefix}/version-id:
    get:
      consumes:
      - application/json
      description: see before
      operationId: getVersionIDbyPrefix
      parameters:
      - description: prefix
        in: path
        name: prefix
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VersionIDListResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
            type: object
      summary: See before
      tags:
      - kv
  /api/sbac/object:
    post:
      consumes:
      - application/json
      description: TODO
      operationId: createObject
      parameters:
      - description: object
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/api.ObjectRequest'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ObjectIDResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
            type: object
      summary: Create an object to a shard
      tags:
      - sbac
  /api/sbac/states:
    get:
      consumes:
      - application/json
      description: TODO
      operationId: states
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Object'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
            type: object
      summary: Get the states
      tags:
      - sbac
  /api/sbac/transaction:
    post:
      consumes:
      - application/json
      description: TODO
      operationId: addTransaction
      parameters:
      - description: transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/api.Transaction'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Object'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
            type: object
      summary: Add a transaction to a shard
      tags:
      - sbac
  /api/sbac/transaction-checked:
    post:
      consumes:
      - application/json
      description: TODO
      operationId: addTransaction
      parameters:
      - description: transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/api.Transaction'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Object'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
            type: object
      summary: Add a transaction which is already checked to a shard
      tags:
      - sbac
swagger: "2.0"
