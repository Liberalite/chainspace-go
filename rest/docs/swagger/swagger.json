{
    "swagger": "2.0",
    "info": {
        "description": "Chainspace REST API endpoints",
        "title": "Chainspace API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/checker/check": {
            "post": {
                "description": "Checks something",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checker"
                ],
                "summary": "Checks something",
                "operationId": "check",
                "parameters": [
                    {
                        "description": "transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Transaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.CheckTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/api/kv/label/{label}": {
            "get": {
                "description": "get string by label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "Retrieve a key by its label",
                "operationId": "getbyLabel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "label",
                        "name": "label",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.ObjectResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/api/kv/label/{label}/version-id": {
            "get": {
                "description": "get version ID by label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "Retrieve a version ID by its label",
                "operationId": "getVersionIDbyLabel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "label",
                        "name": "label",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.VersionIDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/api/kv/prefix/{prefix}": {
            "get": {
                "description": "See before",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "See before",
                "operationId": "getByPrefix",
                "parameters": [
                    {
                        "type": "string",
                        "description": "prefix",
                        "name": "prefix",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.ObjectListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/api/kv/prefix/{prefix}/version-id": {
            "get": {
                "description": "see before",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "See before",
                "operationId": "getVersionIDbyPrefix",
                "parameters": [
                    {
                        "type": "string",
                        "description": "prefix",
                        "name": "prefix",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.VersionIDListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/api/sbac/object": {
            "post": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sbac"
                ],
                "summary": "Create an object to a shard",
                "operationId": "createObject",
                "parameters": [
                    {
                        "description": "object",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.ObjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.ObjectIDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/api/sbac/states": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sbac"
                ],
                "summary": "Get the states",
                "operationId": "states",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/api/sbac/transaction": {
            "post": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sbac"
                ],
                "summary": "Add a transaction to a shard",
                "operationId": "addTransaction",
                "parameters": [
                    {
                        "description": "transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Transaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/api/sbac/transaction-checked": {
            "post": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sbac"
                ],
                "summary": "Add a transaction which is already checked to a shard",
                "operationId": "addTransaction",
                "parameters": [
                    {
                        "description": "transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Transaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.CheckTransactionResponse": {
            "type": "object",
            "properties": {
                "node_id": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                },
                "signature": {
                    "type": "string"
                }
            }
        },
        "api.Dependency": {
            "type": "object"
        },
        "api.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api.LabelObject": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "object": {
                    "type": "object"
                }
            }
        },
        "api.LabelVersionID": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "version_id": {
                    "type": "string"
                }
            }
        },
        "api.Object": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                },
                "version_id": {
                    "type": "string"
                }
            }
        },
        "api.ObjectIDResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.ObjectListResponse": {
            "type": "object",
            "properties": {
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.LabelObject"
                    }
                }
            }
        },
        "api.ObjectRequest": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "object"
                }
            }
        },
        "api.ObjectResponse": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "object"
                }
            }
        },
        "api.Trace": {
            "type": "object",
            "properties": {
                "contract_id": {
                    "type": "string"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Dependency"
                    }
                },
                "input_object_version_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "input_reference_version_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "\u0026{%!s(token.Pos=2188) \u003cnil\u003e string}"
                    }
                },
                "output_objects": {
                    "type": "array",
                    "items": {
                        "type": "\u0026{%!s(token.Pos=2007) %!s(*ast.FieldList=\u0026{2016 [] 2017}) %!s(bool=false)}"
                    }
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "type": "\u0026{%!s(token.Pos=2071) %!s(*ast.FieldList=\u0026{2080 [] 2081}) %!s(bool=false)}"
                    }
                },
                "procedure": {
                    "type": "string"
                },
                "returns": {
                    "type": "array",
                    "items": {
                        "type": "\u0026{%!s(token.Pos=2131) %!s(*ast.FieldList=\u0026{2140 [] 2141}) %!s(bool=false)}"
                    }
                }
            }
        },
        "api.Transaction": {
            "type": "object",
            "properties": {
                "mappings": {
                    "type": "object"
                },
                "signatures": {
                    "type": "object"
                },
                "traces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Trace"
                    }
                }
            }
        },
        "api.VersionIDListResponse": {
            "type": "object",
            "properties": {
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.LabelVersionID"
                    }
                }
            }
        },
        "api.VersionIDResponse": {
            "type": "object",
            "properties": {
                "version_id": {
                    "type": "string"
                }
            }
        }
    }
}