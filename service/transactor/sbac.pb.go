// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types.proto

package transactor

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type SBACOpcode int32

const (
	SBACOpcode_ACCEPT_TRANSACTION SBACOpcode = 0
	SBACOpcode_COMMIT_TRANSACTION SBACOpcode = 1
)

var SBACOpcode_name = map[int32]string{
	0: "ACCEPT_TRANSACTION",
	1: "COMMIT_TRANSACTION",
}
var SBACOpcode_value = map[string]int32{
	"ACCEPT_TRANSACTION": 0,
	"COMMIT_TRANSACTION": 1,
}

func (x SBACOpcode) String() string {
	return proto.EnumName(SBACOpcode_name, int32(x))
}
func (SBACOpcode) EnumDescriptor() ([]byte, []int) { return fileDescriptorSbac, []int{0} }

type SBACDecision int32

const (
	SBACDecision_ACCEPT SBACDecision = 0
	SBACDecision_REJECT SBACDecision = 1
)

var SBACDecision_name = map[int32]string{
	0: "ACCEPT",
	1: "REJECT",
}
var SBACDecision_value = map[string]int32{
	"ACCEPT": 0,
	"REJECT": 1,
}

func (x SBACDecision) String() string {
	return proto.EnumName(SBACDecision_name, int32(x))
}
func (SBACDecision) EnumDescriptor() ([]byte, []int) { return fileDescriptorSbac, []int{1} }

type SBACMessage struct {
	Op            SBACOpcode   `protobuf:"varint,1,opt,name=op,proto3,enum=transactor.SBACOpcode" json:"op,omitempty"`
	Decision      SBACDecision `protobuf:"varint,2,opt,name=decision,proto3,enum=transactor.SBACDecision" json:"decision,omitempty"`
	TransactionID []byte       `protobuf:"bytes,3,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
}

func (m *SBACMessage) Reset()                    { *m = SBACMessage{} }
func (m *SBACMessage) String() string            { return proto.CompactTextString(m) }
func (*SBACMessage) ProtoMessage()               {}
func (*SBACMessage) Descriptor() ([]byte, []int) { return fileDescriptorSbac, []int{0} }

func (m *SBACMessage) GetOp() SBACOpcode {
	if m != nil {
		return m.Op
	}
	return SBACOpcode_ACCEPT_TRANSACTION
}

func (m *SBACMessage) GetDecision() SBACDecision {
	if m != nil {
		return m.Decision
	}
	return SBACDecision_ACCEPT
}

func (m *SBACMessage) GetTransactionID() []byte {
	if m != nil {
		return m.TransactionID
	}
	return nil
}

func init() {
	proto.RegisterType((*SBACMessage)(nil), "transactor.SBACMessage")
	proto.RegisterEnum("transactor.SBACOpcode", SBACOpcode_name, SBACOpcode_value)
	proto.RegisterEnum("transactor.SBACDecision", SBACDecision_name, SBACDecision_value)
}

func init() { proto.RegisterFile("service/transactor/sbac.proto", fileDescriptorSbac) }

var fileDescriptorSbac = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2f, 0x29, 0x4a, 0xcc, 0x2b, 0x4e, 0x4c, 0x2e, 0xc9, 0x2f, 0xd2, 0x2f,
	0x4e, 0x4a, 0x4c, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x08, 0x4b, 0xe9, 0xa6,
	0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0xa7, 0xe7, 0xa7, 0xe7, 0xeb, 0x83,
	0x95, 0x24, 0x95, 0xa6, 0x81, 0x79, 0x60, 0x0e, 0x98, 0x05, 0xd1, 0xaa, 0xb4, 0x84, 0x91, 0x8b,
	0x3b, 0xd8, 0xc9, 0xd1, 0xd9, 0x37, 0xb5, 0xb8, 0x38, 0x31, 0x3d, 0x55, 0x48, 0x8d, 0x8b, 0x29,
	0xbf, 0x40, 0x82, 0x51, 0x81, 0x51, 0x83, 0xcf, 0x48, 0x4c, 0x0f, 0x61, 0xae, 0x1e, 0x48, 0x91,
	0x7f, 0x41, 0x72, 0x7e, 0x4a, 0x6a, 0x10, 0x53, 0x7e, 0x81, 0x90, 0x09, 0x17, 0x47, 0x4a, 0x6a,
	0x72, 0x66, 0x71, 0x66, 0x7e, 0x9e, 0x04, 0x13, 0x58, 0xb5, 0x04, 0xba, 0x6a, 0x17, 0xa8, 0x7c,
	0x10, 0x5c, 0xa5, 0x90, 0x39, 0x17, 0x2f, 0x4c, 0x51, 0x66, 0x7e, 0x9e, 0xa7, 0x8b, 0x04, 0xb3,
	0x02, 0xa3, 0x06, 0x8f, 0x93, 0xe0, 0xa3, 0x7b, 0xf2, 0xbc, 0x21, 0xc8, 0x12, 0x41, 0xa8, 0xea,
	0xb4, 0x6c, 0xb8, 0xb8, 0x10, 0x0e, 0x10, 0x12, 0xe3, 0x12, 0x72, 0x74, 0x76, 0x76, 0x0d, 0x08,
	0x89, 0x0f, 0x09, 0x72, 0xf4, 0x0b, 0x76, 0x74, 0x0e, 0xf1, 0xf4, 0xf7, 0x13, 0x60, 0x00, 0x89,
	0x3b, 0xfb, 0xfb, 0xfa, 0x7a, 0xa2, 0x8a, 0x33, 0x6a, 0xa9, 0x71, 0xf1, 0x20, 0x3b, 0x48, 0x88,
	0x8b, 0x8b, 0x0d, 0xa2, 0x5f, 0x80, 0x01, 0xc4, 0x0e, 0x72, 0xf5, 0x72, 0x75, 0x0e, 0x11, 0x60,
	0x4c, 0x62, 0x03, 0x87, 0x89, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xb5, 0x40, 0x9f, 0x1e, 0x6f,
	0x01, 0x00, 0x00,
}
